AWSTemplateFormatVersion: '2010-09-09'
Description: 'Basic Mad Libs Serverless Stack'

Parameters:
  Environment:
    Type: String
    Default: development
    AllowedValues: [development, staging, production]

Resources:
  # DynamoDB Table
  GameDataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub 'MadLibsServerless-${Environment}-GameData'
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: GSI1PK
          AttributeType: S
        - AttributeName: GSI1SK
          AttributeType: S
        - AttributeName: RoomCode
          AttributeType: S
        - AttributeName: CreatedAt
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: GSI1
          KeySchema:
            - AttributeName: GSI1PK
              KeyType: HASH
            - AttributeName: GSI1SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: RoomCodeIndex
          KeySchema:
            - AttributeName: RoomCode
              KeyType: HASH
            - AttributeName: CreatedAt
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      TimeToLiveSpecification:
        AttributeName: TTL
        Enabled: true
      PointInTimeRecoverySpecification:
        PointInTimeRecoveryEnabled: true
      Tags:
        - Key: Project
          Value: MadLibsGame
        - Key: Environment
          Value: !Ref Environment

  # S3 Bucket for Website
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'madlibsserverless-${Environment}-website-${AWS::AccountId}'
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256

  # S3 Bucket for Images
  ImagesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub 'madlibsserverless-${Environment}-images-${AWS::AccountId}'
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldImages
            Status: Enabled
            ExpirationInDays: 1

Outputs:
  DynamoDBTableName:
    Description: 'Name of the DynamoDB table'
    Value: !Ref GameDataTable
    Export:
      Name: !Sub '${AWS::StackName}-TableName'

  WebsiteBucketName:
    Description: 'Name of the website S3 bucket'
    Value: !Ref WebsiteBucket
    Export:
      Name: !Sub '${AWS::StackName}-WebsiteBucketName'

  ImagesBucketName:
    Description: 'Name of the images S3 bucket'
    Value: !Ref ImagesBucket
    Export:
      Name: !Sub '${AWS::StackName}-ImagesBucketName'

  StackName:
    Description: 'Name of the CloudFormation stack'
    Value: !Ref AWS::StackName

  Region:
    Description: 'AWS region where resources are deployed'
    Value: !Ref AWS::Region